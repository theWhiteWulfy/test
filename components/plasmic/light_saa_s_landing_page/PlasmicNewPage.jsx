// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 8g69JuxFDM1SNwBXrCiogu
// Component: ijWd3E0XXn
import * as React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_light_saa_s_landing_page.module.css"; // plasmic-import: 8g69JuxFDM1SNwBXrCiogu/projectcss
import sty from "./PlasmicNewPage.module.css"; // plasmic-import: ijWd3E0XXn/css
import VectorIcon from "./icons/PlasmicIcon__Vector"; // plasmic-import: p-BPD-SYwu/icon

createPlasmicElementProxy;

export const PlasmicNewPage__VariantProps = new Array();

export const PlasmicNewPage__ArgProps = new Array();

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());

const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicNewPage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});
  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"desktop"}
            data-plasmic-override={overrides.desktop}
            className={classNames(projectcss.all, sty.desktop)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"frame3"}
              data-plasmic-override={overrides.frame3}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame3)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame120"}
                data-plasmic-override={overrides.frame120}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame120)}
              >
                <div
                  data-plasmic-name={"upsurgeBlackLogo1"}
                  data-plasmic-override={overrides.upsurgeBlackLogo1}
                  className={classNames(projectcss.all, sty.upsurgeBlackLogo1)}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame119"}
                  data-plasmic-override={overrides.frame119}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame119)}
                >
                  <div
                    data-plasmic-name={"landing"}
                    data-plasmic-override={overrides.landing}
                    className={classNames(projectcss.all, sty.landing)}
                  >
                    <div
                      data-plasmic-name={"rectangle119"}
                      data-plasmic-override={overrides.rectangle119}
                      className={classNames(projectcss.all, sty.rectangle119)}
                    />

                    <VectorIcon
                      data-plasmic-name={"svg"}
                      data-plasmic-override={overrides.svg}
                      className={classNames(projectcss.all, sty.svg)}
                      role={"img"}
                    />

                    <div
                      data-plasmic-name={"fjc000411"}
                      data-plasmic-override={overrides.fjc000411}
                      className={classNames(projectcss.all, sty.fjc000411)}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__niAiB
                      )}
                    >
                      {"Congratulations"}
                    </div>
                    <div
                      data-plasmic-name={"untitledDesign1"}
                      data-plasmic-override={overrides.untitledDesign1}
                      className={classNames(
                        projectcss.all,
                        sty.untitledDesign1
                      )}
                    />
                  </div>
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"emailBody"}
                    data-plasmic-override={overrides.emailBody}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.emailBody)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wCIjx
                      )}
                    >
                      {"Dear Parent,"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__imfm8
                      )}
                    >
                      {
                        "Congratulations on successfully registering the student's name with upsurge. They are registered with the username nousername, please user this username to log-in.  \n\nYou have taken your first step towards your child's financial freedom. You have gifted your child their ticket to happiness and a successful future. \n\nWe encourage you to discuss your financial journey with your child. share your experiences and reiterate the importance of savings and investing. We will be regularly updating you on your child's progress and feedback after every session. \n\nFor now, let your child explore, play, learn and enjoy on the upsurge portal."
                      }
                    </div>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame116"}
                      data-plasmic-override={overrides.frame116}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame116)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__seoEf
                        )}
                      >
                        {"Verify email to redeem rewards"}
                      </div>
                    </p.Stack>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ddQ7T
                      )}
                    >
                      {"Make your child future-ready"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nQvxH
                      )}
                    >
                      {
                        "upsurge is India's most loved platform to enable financial literacy for kids & make them MONEY-smart"
                      }
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__brEcX
                      )}
                    >
                      {
                        "Add your child on our dashboard to experience first-of-its-kind platform with-"
                      }
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__itWyc
                      )}
                    >
                      {
                        "Fun educational games\nKnowledge quests\nGamified experience throughout\nUnicoins at each activity\nExciting rewards\n\n25000+ children and their parents already love us. What are you waiting for?"
                      }
                    </div>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame117"}
                      data-plasmic-override={overrides.frame117}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame117)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__bjesU
                        )}
                      >
                        {"Learn more"}
                      </div>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
              <p.Stack
                as={"div"}
                data-plasmic-name={"footer"}
                data-plasmic-override={overrides.footer}
                hasGap={true}
                className={classNames(projectcss.all, sty.footer)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wt6DY
                  )}
                >
                  {"Visit us"}
                </div>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame118"}
                  data-plasmic-override={overrides.frame118}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame118)}
                >
                  <div
                    data-plasmic-name={"group122"}
                    data-plasmic-override={overrides.group122}
                    className={classNames(projectcss.all, sty.group122)}
                  >
                    <div
                      data-plasmic-name={"rectangle121"}
                      data-plasmic-override={overrides.rectangle121}
                      className={classNames(projectcss.all, sty.rectangle121)}
                    />

                    <div
                      data-plasmic-name={"facebook"}
                      data-plasmic-override={overrides.facebook}
                      className={classNames(projectcss.all, sty.facebook)}
                    />
                  </div>
                  <div
                    data-plasmic-name={"group123"}
                    data-plasmic-override={overrides.group123}
                    className={classNames(projectcss.all, sty.group123)}
                  >
                    <div
                      data-plasmic-name={"rectangle122"}
                      data-plasmic-override={overrides.rectangle122}
                      className={classNames(projectcss.all, sty.rectangle122)}
                    />

                    <div
                      data-plasmic-name={"instagram"}
                      data-plasmic-override={overrides.instagram}
                      className={classNames(projectcss.all, sty.instagram)}
                    />
                  </div>
                  <div
                    data-plasmic-name={"group121"}
                    data-plasmic-override={overrides.group121}
                    className={classNames(projectcss.all, sty.group121)}
                  >
                    <div
                      data-plasmic-name={"rectangle123"}
                      data-plasmic-override={overrides.rectangle123}
                      className={classNames(projectcss.all, sty.rectangle123)}
                    />

                    <div
                      data-plasmic-name={"linkedIn"}
                      data-plasmic-override={overrides.linkedIn}
                      className={classNames(projectcss.all, sty.linkedIn)}
                    />
                  </div>
                  <div
                    data-plasmic-name={"group120"}
                    data-plasmic-override={overrides.group120}
                    className={classNames(projectcss.all, sty.group120)}
                  >
                    <div
                      data-plasmic-name={"rectangle124"}
                      data-plasmic-override={overrides.rectangle124}
                      className={classNames(projectcss.all, sty.rectangle124)}
                    />

                    <div
                      data-plasmic-name={"website"}
                      data-plasmic-override={overrides.website}
                      className={classNames(projectcss.all, sty.website)}
                    />
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "desktop",
    "frame3",
    "frame120",
    "upsurgeBlackLogo1",
    "frame119",
    "landing",
    "rectangle119",
    "svg",
    "fjc000411",
    "untitledDesign1",
    "emailBody",
    "frame116",
    "frame117",
    "footer",
    "frame118",
    "group122",
    "rectangle121",
    "facebook",
    "group123",
    "rectangle122",
    "instagram",
    "group121",
    "rectangle123",
    "linkedIn",
    "group120",
    "rectangle124",
    "website"
  ],

  desktop: [
    "desktop",
    "frame3",
    "frame120",
    "upsurgeBlackLogo1",
    "frame119",
    "landing",
    "rectangle119",
    "svg",
    "fjc000411",
    "untitledDesign1",
    "emailBody",
    "frame116",
    "frame117",
    "footer",
    "frame118",
    "group122",
    "rectangle121",
    "facebook",
    "group123",
    "rectangle122",
    "instagram",
    "group121",
    "rectangle123",
    "linkedIn",
    "group120",
    "rectangle124",
    "website"
  ],

  frame3: [
    "frame3",
    "frame120",
    "upsurgeBlackLogo1",
    "frame119",
    "landing",
    "rectangle119",
    "svg",
    "fjc000411",
    "untitledDesign1",
    "emailBody",
    "frame116",
    "frame117",
    "footer",
    "frame118",
    "group122",
    "rectangle121",
    "facebook",
    "group123",
    "rectangle122",
    "instagram",
    "group121",
    "rectangle123",
    "linkedIn",
    "group120",
    "rectangle124",
    "website"
  ],

  frame120: [
    "frame120",
    "upsurgeBlackLogo1",
    "frame119",
    "landing",
    "rectangle119",
    "svg",
    "fjc000411",
    "untitledDesign1",
    "emailBody",
    "frame116",
    "frame117"
  ],

  upsurgeBlackLogo1: ["upsurgeBlackLogo1"],
  frame119: [
    "frame119",
    "landing",
    "rectangle119",
    "svg",
    "fjc000411",
    "untitledDesign1",
    "emailBody",
    "frame116",
    "frame117"
  ],

  landing: ["landing", "rectangle119", "svg", "fjc000411", "untitledDesign1"],
  rectangle119: ["rectangle119"],
  svg: ["svg"],
  fjc000411: ["fjc000411"],
  untitledDesign1: ["untitledDesign1"],
  emailBody: ["emailBody", "frame116", "frame117"],
  frame116: ["frame116"],
  frame117: ["frame117"],
  footer: [
    "footer",
    "frame118",
    "group122",
    "rectangle121",
    "facebook",
    "group123",
    "rectangle122",
    "instagram",
    "group121",
    "rectangle123",
    "linkedIn",
    "group120",
    "rectangle124",
    "website"
  ],

  frame118: [
    "frame118",
    "group122",
    "rectangle121",
    "facebook",
    "group123",
    "rectangle122",
    "instagram",
    "group121",
    "rectangle123",
    "linkedIn",
    "group120",
    "rectangle124",
    "website"
  ],

  group122: ["group122", "rectangle121", "facebook"],
  rectangle121: ["rectangle121"],
  facebook: ["facebook"],
  group123: ["group123", "rectangle122", "instagram"],
  rectangle122: ["rectangle122"],
  instagram: ["instagram"],
  group121: ["group121", "rectangle123", "linkedIn"],
  rectangle123: ["rectangle123"],
  linkedIn: ["linkedIn"],
  group120: ["group120", "rectangle124", "website"],
  rectangle124: ["rectangle124"],
  website: ["website"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicNewPage__ArgProps,
          internalVariantPropNames: PlasmicNewPage__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicNewPage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicNewPage";
  } else {
    func.displayName = `PlasmicNewPage.${nodeName}`;
  }
  return func;
}

export const PlasmicNewPage = Object.assign(
  // Top-level PlasmicNewPage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    desktop: makeNodeComponent("desktop"),
    frame3: makeNodeComponent("frame3"),
    frame120: makeNodeComponent("frame120"),
    upsurgeBlackLogo1: makeNodeComponent("upsurgeBlackLogo1"),
    frame119: makeNodeComponent("frame119"),
    landing: makeNodeComponent("landing"),
    rectangle119: makeNodeComponent("rectangle119"),
    svg: makeNodeComponent("svg"),
    fjc000411: makeNodeComponent("fjc000411"),
    untitledDesign1: makeNodeComponent("untitledDesign1"),
    emailBody: makeNodeComponent("emailBody"),
    frame116: makeNodeComponent("frame116"),
    frame117: makeNodeComponent("frame117"),
    footer: makeNodeComponent("footer"),
    frame118: makeNodeComponent("frame118"),
    group122: makeNodeComponent("group122"),
    rectangle121: makeNodeComponent("rectangle121"),
    facebook: makeNodeComponent("facebook"),
    group123: makeNodeComponent("group123"),
    rectangle122: makeNodeComponent("rectangle122"),
    instagram: makeNodeComponent("instagram"),
    group121: makeNodeComponent("group121"),
    rectangle123: makeNodeComponent("rectangle123"),
    linkedIn: makeNodeComponent("linkedIn"),
    group120: makeNodeComponent("group120"),
    rectangle124: makeNodeComponent("rectangle124"),
    website: makeNodeComponent("website"),
    // Metadata about props expected for PlasmicNewPage
    internalVariantProps: PlasmicNewPage__VariantProps,
    internalArgProps: PlasmicNewPage__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicNewPage;
/* prettier-ignore-end */
